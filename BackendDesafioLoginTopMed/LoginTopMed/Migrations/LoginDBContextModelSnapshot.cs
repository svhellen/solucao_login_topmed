// <auto-generated />
using System;
using LoginTopMed.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginTopMed.Migrations
{
    [DbContext(typeof(LoginDBContext))]
    partial class LoginDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoginTopMed.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 16, 14, 43, 7, 850, DateTimeKind.Utc).AddTicks(8226),
                            Email = "user1@topmed.com",
                            IsActive = true,
                            Name = "Maria",
                            PasswordHash = "$2a$11$P3xtyxCFM7.9oI9gz.T74OH6.hw1vnoq8PlmbkHrQBpWs66TfuGIa",
                            Username = "user_1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 16, 14, 43, 8, 112, DateTimeKind.Utc).AddTicks(3267),
                            Email = "user2@topmed.com",
                            IsActive = true,
                            Name = "João",
                            PasswordHash = "$2a$11$FRztAeiIBSSXl8YZ/VpsBOozyeSRviWFG11F5E6FbbATU7ILey7ym",
                            Username = "user_2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
